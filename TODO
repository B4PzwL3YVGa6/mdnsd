Read documentation
------------------
  * Read mdns draft. DONE
  * Learn about ipv4 multicast (unp). DONE
  * Read dns-sd draft. DONE
  * Take a look at libc resolv code. DONE
  * Read more about DNS in general. DONE
  * Read more about dynamic DNS. DONE
  * Learn how to use libevent. DONE
  * Read ripd code. DONE
  
Setup
-----------------
  * Get a linux box running avahi to test against. DONE
  * Make coding environment, github ? and so on... DONE
  
Code
-----------------
  * Maximum packet size should be base on current iface mtu not 9k as
  it is now (jumbo frame). We could use the smaller mtu between our
  ifaces or have it per iface. Done on the client side.
  * Too much duplicated code in control.c and mdns_api.c, hinfo and
  hostname lookup can be merged.
  * Remove api infix in mdns_api.c, it's plain lame, gotta split the
  library first.
  * Conflict name resolution.
  * Name compression.
  * Publish commands in mdnsctl.
  * Check if the signal handling code is correct.
  * Write a dummy README.
  * Check for possible overruns when parsing packets, specially in
  name pointers.
  * Hack libc resolv to resolv .local.
  * Think of a better syntax for mdnsctl (lookup -t HINFO foo.local). DONE
  * Implement control and API protocol. DONE
  * Implement serialization so we can start the responder. DONE
  * Implement cache expiration machine. DONE
  * Import henning's log source. DONE
  * Code getopt. DONE
  * Import kif source remove route stuff ?. DONE
  * fetch all interfaces. DONE
  * Check interface types, make sure they are multicastable. DONE
